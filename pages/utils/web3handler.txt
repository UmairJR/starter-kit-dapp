import React, { useState } from 'react';
import Web3 from 'web3';
import Contract from '../abis/Contract.json';

const [loading, setLoading] = useState(true);
const [web3, setWeb3] = useState(null);
const [accounts, setAccounts] = useState(null);
const [contract, setContract] = useState(null);
const [contract_address, setContract_address] = useState('');

  

  const web3Handler = async () => {
    try {
      if (typeof window !== 'undefined' && window.ethereum) {
        
        const web3Instance = new Web3(window.ethereum);
        
        const accounts = await window.ethereum.request({
          method: "eth_requestAccounts",
      });
        console.log('Current account:', accounts[0]);
        const netId = await web3Instance.eth.net.getId();
        console.log(netId);
        const contract_address = Contract.networks[netId].address.toString();
        console.log('Deployed address:', contract_address);
        const contract = new web3Instance.eth.Contract(
          Contract.abi,
          contract_address
        );
        setWeb3(web3Instance);
        setAccounts(accounts);
        setContract(contract);
        setContract_address(contract_address);
      } else {
        console.error('MetaMask not detected');
        const provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545');
        const web3Instance = new Web3(provider);
        setWeb3(web3Instance);
      }
    } catch (error) {
      console.error('Error initializing Web3:', error);
    } finally {
      setLoading(false);
    }
  };